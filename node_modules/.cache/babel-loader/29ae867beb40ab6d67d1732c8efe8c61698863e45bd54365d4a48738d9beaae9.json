{"ast":null,"code":"var _jsxFileName = \"/home/guilherme/\\xC1rea de Trabalho/trivia-redux/sd-029-b-project-trivia-react-redux/src/pages/Feedback.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { actionResetScore } from '../redux/actions';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Feedback extends Component {\n  constructor() {\n    super(...arguments);\n    this.handlePlayBtn = () => {\n      const {\n        history,\n        dispatch\n      } = this.props;\n      dispatch(actionResetScore());\n      history.push('/');\n    };\n  }\n  render() {\n    const {\n      assertions,\n      score,\n      history\n    } = this.props;\n    const number = 3;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        \"data-testid\": \"feedback-text\",\n        children: assertions < number ? 'Could be better...' : 'Well Done!'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Placar final:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"feedback-total-score\",\n          children: score\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Respostas corretas:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          \"data-testid\": \"feedback-total-question\",\n          children: assertions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"btn-play-again\",\n        onClick: this.handlePlayBtn,\n        children: \"Play Again\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"btn-ranking\",\n        onClick: () => history.push('/ranking'),\n        children: \"Ranking\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this);\n  }\n}\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired\n};\nconst mapStateToProps = state => ({\n  assertions: state.player.assertions,\n  score: state.player.score\n});\nexport default connect(mapStateToProps)(Feedback);","map":{"version":3,"names":["React","Component","PropTypes","connect","Header","actionResetScore","Feedback","handlePlayBtn","history","dispatch","props","push","render","assertions","score","number","propTypes","isRequired","shape","func","mapStateToProps","state","player"],"sources":["/home/guilherme/Área de Trabalho/trivia-redux/sd-029-b-project-trivia-react-redux/src/pages/Feedback.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Header from '../components/Header';\nimport { actionResetScore } from '../redux/actions';\n\nclass Feedback extends Component {\n  handlePlayBtn = () => {\n    const { history, dispatch } = this.props;\n    dispatch(actionResetScore());\n    history.push('/');\n  };\n\n  render() {\n    const { assertions, score, history } = this.props;\n    const number = 3;\n    return (\n      <div>\n        <Header />\n        <p\n          data-testid=\"feedback-text\"\n        >\n          {assertions < number ? 'Could be better...' : 'Well Done!'}\n\n        </p>\n        <p>\n          Placar final:\n          <span data-testid=\"feedback-total-score\">\n            {score}\n          </span>\n        </p>\n        <p>\n          Respostas corretas:\n          <span data-testid=\"feedback-total-question\">\n            {assertions}\n          </span>\n        </p>\n        <button\n          type=\"button\"\n          data-testid=\"btn-play-again\"\n          onClick={ this.handlePlayBtn }\n        >\n          Play Again\n\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"btn-ranking\"\n          onClick={ () => history.push('/ranking') }\n        >\n          Ranking\n\n        </button>\n      </div>\n    );\n  }\n}\n\nFeedback.propTypes = {\n  assertions: PropTypes.number.isRequired,\n  score: PropTypes.number.isRequired,\n  history: PropTypes.shape({\n    push: PropTypes.func.isRequired,\n  }).isRequired,\n  dispatch: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  assertions: state.player.assertions,\n  score: state.player.score,\n});\n\nexport default connect(mapStateToProps)(Feedback);\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,SAAS,MAAM,YAAY;AAClC,SAASC,OAAO,QAAQ,aAAa;AACrC,OAAOC,MAAM,MAAM,sBAAsB;AACzC,SAASC,gBAAgB,QAAQ,kBAAkB;AAAC;AAEpD,MAAMC,QAAQ,SAASL,SAAS,CAAC;EAAA;IAAA;IAAA,KAC/BM,aAAa,GAAG,MAAM;MACpB,MAAM;QAAEC,OAAO;QAAEC;MAAS,CAAC,GAAG,IAAI,CAACC,KAAK;MACxCD,QAAQ,CAACJ,gBAAgB,EAAE,CAAC;MAC5BG,OAAO,CAACG,IAAI,CAAC,GAAG,CAAC;IACnB,CAAC;EAAA;EAEDC,MAAM,GAAG;IACP,MAAM;MAAEC,UAAU;MAAEC,KAAK;MAAEN;IAAQ,CAAC,GAAG,IAAI,CAACE,KAAK;IACjD,MAAMK,MAAM,GAAG,CAAC;IAChB,oBACE;MAAA,wBACE,QAAC,MAAM;QAAA;QAAA;QAAA;MAAA,QAAG,eACV;QACE,eAAY,eAAe;QAAA,UAE1BF,UAAU,GAAGE,MAAM,GAAG,oBAAoB,GAAG;MAAY;QAAA;QAAA;QAAA;MAAA,QAExD,eACJ;QAAA,WAAG,eAED;UAAM,eAAY,sBAAsB;UAAA,UACrCD;QAAK;UAAA;UAAA;UAAA;QAAA,QACD;MAAA;QAAA;QAAA;QAAA;MAAA,QACL,eACJ;QAAA,WAAG,qBAED;UAAM,eAAY,yBAAyB;UAAA,UACxCD;QAAU;UAAA;UAAA;UAAA;QAAA,QACN;MAAA;QAAA;QAAA;QAAA;MAAA,QACL,eACJ;QACE,IAAI,EAAC,QAAQ;QACb,eAAY,gBAAgB;QAC5B,OAAO,EAAG,IAAI,CAACN,aAAe;QAAA,UAC/B;MAGD;QAAA;QAAA;QAAA;MAAA,QAAS,eACT;QACE,IAAI,EAAC,QAAQ;QACb,eAAY,aAAa;QACzB,OAAO,EAAG,MAAMC,OAAO,CAACG,IAAI,CAAC,UAAU,CAAG;QAAA,UAC3C;MAGD;QAAA;QAAA;QAAA;MAAA,QAAS;IAAA;MAAA;MAAA;MAAA;IAAA,QACL;EAEV;AACF;AAEAL,QAAQ,CAACU,SAAS,GAAG;EACnBH,UAAU,EAAEX,SAAS,CAACa,MAAM,CAACE,UAAU;EACvCH,KAAK,EAAEZ,SAAS,CAACa,MAAM,CAACE,UAAU;EAClCT,OAAO,EAAEN,SAAS,CAACgB,KAAK,CAAC;IACvBP,IAAI,EAAET,SAAS,CAACiB,IAAI,CAACF;EACvB,CAAC,CAAC,CAACA,UAAU;EACbR,QAAQ,EAAEP,SAAS,CAACiB,IAAI,CAACF;AAC3B,CAAC;AAED,MAAMG,eAAe,GAAIC,KAAK,KAAM;EAClCR,UAAU,EAAEQ,KAAK,CAACC,MAAM,CAACT,UAAU;EACnCC,KAAK,EAAEO,KAAK,CAACC,MAAM,CAACR;AACtB,CAAC,CAAC;AAEF,eAAeX,OAAO,CAACiB,eAAe,CAAC,CAACd,QAAQ,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}