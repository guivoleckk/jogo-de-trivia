{"ast":null,"code":"// import { MD5 } from 'crypto-js';\nimport md5 from 'crypto-js/md5';\nexport const fetchToken = async () => {\n  const response = await fetch('https://opentdb.com/api_token.php?command=request');\n  const data = await response.json();\n  return data;\n};\nexport const fetchImage = email => {\n  const emailHash = md5(email).toString();\n  const emailUrl = `https://www.gravatar.com/avatar/${emailHash}`;\n  return emailUrl;\n};\n\n// const defaultNumber = 5;\n\n// export const fetchQuestions = async (\n//   token,\n//   { number = defaultNumber, category = 0, difficulty = 0, type = 0 } = {},\n// ) => {\n//   const url = `https://opentdb.com/api.php?amount=${number}&category=${category}&difficulty=${difficulty}&type=${type}&token=${token}`;\n//   const response = await fetch(url);\n//   const data = await response.json();\n//   return data;\n// };\n\nexport const fetchQuestions = async (token, _ref) => {\n  let {\n    number,\n    category,\n    difficulty,\n    type\n  } = _ref;\n  let url = `https://opentdb.com/api.php?amount=${number}`;\n  if (category !== '0') {\n    url += `&category=${category}`;\n  }\n  if (difficulty !== '0') {\n    url += `&difficulty=${difficulty}`;\n  }\n  if (type !== '0') {\n    url += `&type=${type}`;\n  }\n  url += `&token=${token}`;\n  console.log(url);\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\nexport const triviaCategories = [{\n  id: 0,\n  name: 'Default'\n}, {\n  id: 9,\n  name: 'General Knowledge'\n}, {\n  id: 10,\n  name: 'Entertainment: Books'\n}, {\n  id: 11,\n  name: 'Entertainment: Film'\n}, {\n  id: 12,\n  name: 'Entertainment: Music'\n}, {\n  id: 13,\n  name: 'Entertainment: Musicals & Theatres'\n}, {\n  id: 14,\n  name: 'Entertainment: Television'\n}, {\n  id: 15,\n  name: 'Entertainment: Video Games'\n}, {\n  id: 16,\n  name: 'Entertainment: Board Games'\n}, {\n  id: 17,\n  name: 'Science & Nature'\n}, {\n  id: 18,\n  name: 'Science: Computers'\n}, {\n  id: 19,\n  name: 'Science: Mathematics'\n}, {\n  id: 20,\n  name: 'Mythology'\n}, {\n  id: 21,\n  name: 'Sports'\n}, {\n  id: 22,\n  name: 'Geography'\n}, {\n  id: 23,\n  name: 'History'\n}, {\n  id: 24,\n  name: 'Politics'\n}, {\n  id: 25,\n  name: 'Art'\n}, {\n  id: 26,\n  name: 'Celebrities'\n}, {\n  id: 27,\n  name: 'Animals'\n}, {\n  id: 28,\n  name: 'Vehicles'\n}, {\n  id: 29,\n  name: 'Entertainment: Comics'\n}, {\n  id: 30,\n  name: 'Science: Gadgets'\n}, {\n  id: 31,\n  name: 'Entertainment: Japanese Anime & Manga'\n}, {\n  id: 32,\n  name: 'Entertainment: Cartoon & Animations'\n}];","map":{"version":3,"names":["md5","fetchToken","response","fetch","data","json","fetchImage","email","emailHash","toString","emailUrl","fetchQuestions","token","number","category","difficulty","type","url","console","log","triviaCategories","id","name"],"sources":["/home/guilherme/Área de Trabalho/trivia-redux/sd-029-b-project-trivia-react-redux/src/services/index.js"],"sourcesContent":["// import { MD5 } from 'crypto-js';\nimport md5 from 'crypto-js/md5';\n\nexport const fetchToken = async () => {\n  const response = await fetch('https://opentdb.com/api_token.php?command=request');\n  const data = await response.json();\n  return data;\n};\n\nexport const fetchImage = (email) => {\n  const emailHash = md5(email).toString();\n  const emailUrl = `https://www.gravatar.com/avatar/${emailHash}`;\n  return emailUrl;\n};\n\n// const defaultNumber = 5;\n\n// export const fetchQuestions = async (\n//   token,\n//   { number = defaultNumber, category = 0, difficulty = 0, type = 0 } = {},\n// ) => {\n//   const url = `https://opentdb.com/api.php?amount=${number}&category=${category}&difficulty=${difficulty}&type=${type}&token=${token}`;\n//   const response = await fetch(url);\n//   const data = await response.json();\n//   return data;\n// };\n\nexport const fetchQuestions = async (\n  token,\n  { number, category, difficulty, type },\n) => {\n  let url = `https://opentdb.com/api.php?amount=${number}`;\n  if (category !== '0') {\n    url += `&category=${category}`;\n  }\n  if (difficulty !== '0') {\n    url += `&difficulty=${difficulty}`;\n  }\n  if (type !== '0') {\n    url += `&type=${type}`;\n  }\n  url += `&token=${token}`;\n  console.log(url);\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const triviaCategories = [\n  {\n    id: 0,\n    name: 'Default',\n  },\n  {\n    id: 9,\n    name: 'General Knowledge',\n  },\n  {\n    id: 10,\n    name: 'Entertainment: Books',\n  },\n  {\n    id: 11,\n    name: 'Entertainment: Film',\n  },\n  {\n    id: 12,\n    name: 'Entertainment: Music',\n  },\n  {\n    id: 13,\n    name: 'Entertainment: Musicals & Theatres',\n  },\n  {\n    id: 14,\n    name: 'Entertainment: Television',\n  },\n  {\n    id: 15,\n    name: 'Entertainment: Video Games',\n  },\n  {\n    id: 16,\n    name: 'Entertainment: Board Games',\n  },\n  {\n    id: 17,\n    name: 'Science & Nature',\n  },\n  {\n    id: 18,\n    name: 'Science: Computers',\n  },\n  {\n    id: 19,\n    name: 'Science: Mathematics',\n  },\n  {\n    id: 20,\n    name: 'Mythology',\n  },\n  {\n    id: 21,\n    name: 'Sports',\n  },\n  {\n    id: 22,\n    name: 'Geography',\n  },\n  {\n    id: 23,\n    name: 'History',\n  },\n  {\n    id: 24,\n    name: 'Politics',\n  },\n  {\n    id: 25,\n    name: 'Art',\n  },\n  {\n    id: 26,\n    name: 'Celebrities',\n  },\n  {\n    id: 27,\n    name: 'Animals',\n  },\n  {\n    id: 28,\n    name: 'Vehicles',\n  },\n  {\n    id: 29,\n    name: 'Entertainment: Comics',\n  },\n  {\n    id: 30,\n    name: 'Science: Gadgets',\n  },\n  {\n    id: 31,\n    name: 'Entertainment: Japanese Anime & Manga',\n  },\n  {\n    id: 32,\n    name: 'Entertainment: Cartoon & Animations',\n  },\n];\n"],"mappings":"AAAA;AACA,OAAOA,GAAG,MAAM,eAAe;AAE/B,OAAO,MAAMC,UAAU,GAAG,YAAY;EACpC,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,CAAC;EACjF,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAME,UAAU,GAAIC,KAAK,IAAK;EACnC,MAAMC,SAAS,GAAGR,GAAG,CAACO,KAAK,CAAC,CAACE,QAAQ,EAAE;EACvC,MAAMC,QAAQ,GAAI,mCAAkCF,SAAU,EAAC;EAC/D,OAAOE,QAAQ;AACjB,CAAC;;AAED;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,cAAc,GAAG,OAC5BC,KAAK,WAEF;EAAA,IADH;IAAEC,MAAM;IAAEC,QAAQ;IAAEC,UAAU;IAAEC;EAAK,CAAC;EAEtC,IAAIC,GAAG,GAAI,sCAAqCJ,MAAO,EAAC;EACxD,IAAIC,QAAQ,KAAK,GAAG,EAAE;IACpBG,GAAG,IAAK,aAAYH,QAAS,EAAC;EAChC;EACA,IAAIC,UAAU,KAAK,GAAG,EAAE;IACtBE,GAAG,IAAK,eAAcF,UAAW,EAAC;EACpC;EACA,IAAIC,IAAI,KAAK,GAAG,EAAE;IAChBC,GAAG,IAAK,SAAQD,IAAK,EAAC;EACxB;EACAC,GAAG,IAAK,UAASL,KAAM,EAAC;EACxBM,OAAO,CAACC,GAAG,CAACF,GAAG,CAAC;EAChB,MAAMf,QAAQ,GAAG,MAAMC,KAAK,CAACc,GAAG,CAAC;EACjC,MAAMb,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,EAAE;EAClC,OAAOD,IAAI;AACb,CAAC;AAED,OAAO,MAAMgB,gBAAg},"metadata":{},"sourceType":"module","externalDependencies":[]}